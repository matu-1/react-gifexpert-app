{"version":3,"sources":["components/CategoriaAdd.js","components/GifBox.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifList.js","GifExpertApp.js","index.js"],"names":["CategoriaAdd","setCategorias","useState","valor","setValor","onSubmit","e","preventDefault","trim","length","value","type","onChange","target","GifBox","title","url","className","src","alt","getGifs","categoria","a","encodeURI","fetch","res","json","data","gifs","map","img","id","images","downsized_medium","useFetchGifs","isLoading","state","setstate","useEffect","then","GifList","key","GifExpertApp","props","categorias","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNA8BeA,EA3BM,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACdC,mBAAS,IADK,mBACjCC,EADiC,KAC1BC,EAD0B,KAYxC,OACE,0BAAMC,SAPQ,SAAAC,GACdA,EAAEC,iBACCJ,EAAMK,OAAOC,QAAU,IAC1BR,GAAc,SAAAS,GAAK,OAAKP,GAAL,mBAAeO,OAClCN,EAAS,OAIP,2BACEO,KAAK,OACLD,MAAOP,EACPS,SAdkB,SAAAN,GACtBF,EAASE,EAAEO,OAAOH,YCIPI,EATA,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IACtB,OACE,yBAAKC,UAAU,0CACb,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCLGK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfN,EADe,0FAC0EO,UAAUF,GADpF,sBAELG,MAAMR,GAFD,cAEjBS,EAFiB,gBAGFA,EAAIC,OAHF,uBAGhBC,EAHgB,EAGhBA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAG,YAAK,CAC1BC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QAPf,kBASdY,GATc,4CAAH,sDCmBLM,EAjBM,SAACb,GAAe,IAAD,EACRnB,mBAAS,CACjCyB,KAAM,GACNQ,WAAW,IAHqB,mBAC3BC,EAD2B,KACpBC,EADoB,KAclC,OARAC,qBAAU,WACRlB,EAAQC,GACLkB,MAAK,SAAAX,GAAI,OAAIS,EAAS,CACrBV,KAAMC,EACNO,WAAW,SAEd,CAACd,IAEGe,GCUMI,EAvBC,SAAC,GAAiB,IAAhBnB,EAAe,EAAfA,UAAe,EAEGa,EAAab,GAAlCW,EAFkB,EAExBL,KAAcQ,EAFU,EAEVA,UAErB,OACE,oCACE,wBAAIlB,UAAU,qCAAqCI,GAClDc,GAAa,uBAAGlB,UAAU,oCAAb,eAEd,yBAAKA,UAAU,YAEXe,EAAOH,KAAI,SAAAC,GAAG,OACZ,kBAAC,EAAD,eACEW,IAAKX,EAAIC,IACLD,UCGHY,EAjBM,SAAAC,GAAU,IAAD,EACQzC,mBAAS,CAAC,iBADlB,mBACrB0C,EADqB,KACT3C,EADS,KAG5B,OACE,yBAAKgB,UAAU,aACb,wBAAIA,UAAU,UAAd,gBACA,kBAAC,EAAD,CAAchB,cAAeA,IAC7B,6BAEE2C,EAAWf,KAAI,SAAAR,GAAS,OACtB,kBAAC,EAAD,CAASoB,IAAKpB,EAAWA,UAAWA,SCT9CwB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.4c5e534a.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CategoriaAdd = ({setCategorias}) => {\r\n  const [valor, setValor] = useState('');\r\n  \r\n  const categoriaChange = e => {\r\n    setValor(e.target.value);\r\n  }\r\n  const agregar = e => { //submit\r\n    e.preventDefault();\r\n    if(valor.trim().length <= 2) return;\r\n    setCategorias(value => [valor, ...value]);\r\n    setValor('');\r\n  }\r\n  return (\r\n    <form onSubmit={agregar}>\r\n      <input \r\n        type=\"text\" \r\n        value={valor}\r\n        onChange={categoriaChange}\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nCategoriaAdd.propTypes = {\r\n  setCategorias: PropTypes.func.isRequired\r\n}\r\n\r\nexport default CategoriaAdd","import React from 'react'\r\n\r\nconst GifBox = ({title, url}) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={url} alt={title}/>\r\n      <p>{title}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GifBox\r\n","\r\nexport const getGifs = async (categoria) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?api_key=3O46PIXsNzkaMgtXDmGqplH9oO19svRB&q=${encodeURI(categoria)}&limit=10`;\r\n  let res = await fetch(url);\r\n  let {data} = await res.json();\r\n  let gifs = data.map(img => ({\r\n    id: img.id,\r\n    title: img.title,\r\n    url: img.images?.downsized_medium.url\r\n  }))\r\n  return gifs;\r\n}","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nconst useFetchGifs = (categoria) => {\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    isLoading: true,\r\n  });\r\n\r\n  useEffect(()=>{\r\n    getGifs(categoria)\r\n      .then(gifs => setstate({\r\n        data: gifs,\r\n        isLoading: false,\r\n      }));\r\n  }, [categoria]);\r\n  \r\n  return state;\r\n}\r\n\r\nexport default useFetchGifs\r\n","import React from 'react'\r\nimport GifBox from './GifBox';\r\nimport useFetchGifs from '../hooks/useFetchGifs';\r\n\r\nconst GifList = ({categoria}) => {\r\n  // const [images, setImages] = useState([]);\r\n  const {data: images, isLoading} = useFetchGifs(categoria);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn\">{categoria}</h3>\r\n      {isLoading && <p className=\"animate__animated animate__flash\">Cargando...</p>}\r\n\r\n      <div className=\"gif-list\">\r\n        {\r\n          images.map(img => (\r\n            <GifBox \r\n              key={img.id}\r\n              {...img}\r\n            />\r\n          ))\r\n        }\r\n      </div>\r\n   </>\r\n  )\r\n}\r\n\r\nexport default GifList\r\n","import React, { useState } from 'react';\r\nimport CategoriaAdd from './components/CategoriaAdd';\r\nimport GifList from './components/GifList';\r\n\r\nconst GifExpertApp = props => {\r\n  const [categorias, setCategorias] = useState([\"One puch man\"]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"titulo\">GifExpertApp</h1>\r\n      <CategoriaAdd setCategorias={setCategorias}/>\r\n      <hr/>\r\n      {\r\n        categorias.map(categoria => (\r\n          <GifList key={categoria} categoria={categoria} />\r\n        ))\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}